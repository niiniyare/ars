// THIS FILE IS AUTO GENERATED BY GK-CLI DO NOT EDIT!!
package endpoint

import (
	endpoint "github.com/go-kit/kit/endpoint"
	service "github.com/niiniyare/ars/airport/pkg/service"
)

// Endpoints collects all of the endpoints that compose a profile service. It's
// meant to be used as a helper struct, to collect all of the endpoints into a
// single parameter.
type Endpoints struct {
	CreateAirportsEndpoint  endpoint.Endpoint
	DeleteAirportsEndpoint  endpoint.Endpoint
	GetListAirportsEndpoint endpoint.Endpoint
}

// New returns a Endpoints struct that wraps the provided service, and wires in all of the
// expected endpoint middlewares
func New(s service.AirportService, mdw map[string][]endpoint.Middleware) Endpoints {
	eps := Endpoints{
		CreateAirportsEndpoint:  MakeCreateAirportsEndpoint(s),
		DeleteAirportsEndpoint:  MakeDeleteAirportsEndpoint(s),
		GetListAirportsEndpoint: MakeGetListAirportsEndpoint(s),
	}
	for _, m := range mdw["CreateAirports"] {
		eps.CreateAirportsEndpoint = m(eps.CreateAirportsEndpoint)
	}
	for _, m := range mdw["DeleteAirports"] {
		eps.DeleteAirportsEndpoint = m(eps.DeleteAirportsEndpoint)
	}
	for _, m := range mdw["GetListAirports"] {
		eps.GetListAirportsEndpoint = m(eps.GetListAirportsEndpoint)
	}
	return eps
}
