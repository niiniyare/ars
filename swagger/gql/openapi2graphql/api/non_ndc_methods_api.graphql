# AirGateway NDC JSON API
# This API allows shopping and booking with IATA's New Distribution Capabilities (NDC) standard. It provides aggregated shopping capabilities (AirShopping), detailed offer description (OfferPrice), flight seat selection (SeatAvailability) and booking flight reservations (OrderCreate). Some fields in our API (when noticed) use the PADIS Standard v16.1. Find more information <a href=http://www.iata.org/whatwedo/workgroups/Pages/padis.aspx>here</a>
# The version of the OpenAPI document: 1.2
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

# package openapi2graphql

# non_ndc_methods_api

type mutation {
  # Post ItinShopping
  # Find itinerary by O&amp;D, dates and flight numbers by exact matching input data.&lt;br&gt;   ItinShopping supports all possible itinerary types such as: OW (one-way), RT (round-trip) and MC (multi-city)&lt;br&gt;   &lt;b&gt;(one-trip)&lt;/b&gt; -&gt; To search one way itinerary provide single itinerary object.&lt;/br&gt;   &lt;b&gt;(round-trip)&lt;/b&gt; -&gt; To search round trip provide two itinerary objects&lt;/br&gt;   &lt;b&gt;(round-trip)&lt;/b&gt; -&gt; To search multi city provide itinerary objects according to number of flights&lt;/br&gt; 
  # @param String! agProviders Provider ID
  # @param ItinShoppingPayload payload ItinShoppingPayload is the type for ItinShopping endpoint request body
  # @return [ItinShoppingMedia]
  ItinShoppingPost(agProviders: String!, payload: ItinShoppingPayload): ItinShoppingMedia

  # Post OrderComments
  # OrderComments updates order with new comments
  # @param String! agProviders Provider ID
  # @param OrderCommentsPayload payload OrderCommentsPayload is the type for OrderComments endpoint request body
  # @return [OrderCommentsMedia]
  OrderCommentsPost(agProviders: String!, payload: OrderCommentsPayload): OrderCommentsMedia

  # Post OrderMetas
  # OrderMetas updates order with new metas
  # @param String! agProviders Provider ID
  # @param OrderMetasPayload payload OrderMetasPayload is the type for OrderMetas endpoint request body
  # @return [OrderMetasMedia]
  OrderMetasPost(agProviders: String!, payload: OrderMetasPayload): OrderMetasMedia

  # Post OrderRemarks
  # OrderRemarks updates order with new remarks
  # @param String! agProviders Provider ID
  # @param OrderRemarksPayload payload OrderRemarksPayload is the type for OrderRemarks endpoint request body
  # @return [OrderRemarksMedia]
  OrderRemarksPost(agProviders: String!, payload: OrderRemarksPayload): OrderRemarksMedia

  # Post OrderReview
  # OrderReview returns result of review approval/rejection
  # @param String! agProviders Provider ID
  # @param OrderReviewPayload payload OrderReviewPayload is the type for OrderReview endpoint request body
  # @return [OrderReviewMedia]
  OrderReviewPost(agProviders: String!, payload: OrderReviewPayload): OrderReviewMedia

}

type query {
  # GET OrderFile
  # OrderFile
  # @param String! agProviders Provider ID
  # @param String! fileId Airgateway File ID
  # @param String! Id_ Airgateway Order ID
  # @return [null]
  OrderFileGET(agProviders: String!, fileId: String!, Id_: String!): null

  # GET OrderHistory
  # OrderHistory
  # @param String! agProviders Provider ID
  # @param String! Id_ Airgateway Order ID
  # @return [OrderHistoryMedia]
  OrderHistoryGET(agProviders: String!, Id_: String!): OrderHistoryMedia

  # GET OrderList
  # OrderList
  # @param String! agProviders Provider ID
  # @param String! agency Agency
  # @param String! approveStatus Orders with approve status [in_progress / approved / refused]
  # @param String! bookingDateFrom Booking date from
  # @param String! bookingDateTo Booking date to
  # @param String! corporateID Corporate ID
  # @param String! departureDate Departure date
  # @param String! destination Destination of flight
  # @param String! disrupted Show disrupted orders
  # @param String! Id_ Sort order
  # @param String! origin Origin of flight
  # @param String! page Page number
  # @param String! pageSize Orders number per page
  # @param String! pax PAX number
  # @param String! pnr PNR
  # @param String! providers Providers list separated by comma
  # @param String! psgName Passenger name
  # @param String! psgSurname Passenger surname
  # @param String! showOrdersType Show orders type
  # @param String! showSubagencies Flag to show subagencies&#39; orders
  # @param String! sort Sort order
  # @param String! status Status of order
  # @param String! ticketNumber Ticket Nr. / EMD
  # @return [OrderListMedia]
  OrderListGET(agProviders: String!, agency: String!, approveStatus: String!, bookingDateFrom: String!, bookingDateTo: String!, corporateID: String!, departureDate: String!, destination: String!, disrupted: String!, Id_: String!, origin: String!, page: String!, pageSize: String!, pax: String!, pnr: String!, providers: String!, psgName: String!, psgSurname: String!, showOrdersType: String!, showSubagencies: String!, sort: String!, status: String!, ticketNumber: String!): OrderListMedia

  # GET ProviderList
  # ProviderList
  # @param String! agProviders Provider ID
  # @return [ProviderListMedia]
  ProviderListGET(agProviders: String!): ProviderListMedia

  # Get Status
  # Status returns ok if API is active
  # @return [null]
  StatusGet(): null

}

