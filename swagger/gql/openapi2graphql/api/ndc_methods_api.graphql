# AirGateway NDC JSON API
# This API allows shopping and booking with IATA's New Distribution Capabilities (NDC) standard. It provides aggregated shopping capabilities (AirShopping), detailed offer description (OfferPrice), flight seat selection (SeatAvailability) and booking flight reservations (OrderCreate). Some fields in our API (when noticed) use the PADIS Standard v16.1. Find more information <a href=http://www.iata.org/whatwedo/workgroups/Pages/padis.aspx>here</a>
# The version of the OpenAPI document: 1.2
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

# package openapi2graphql

# ndc_methods_api

type mutation {
  # Post AirDocIssue
  # AirDocIssue the ability to pay for the held booking.
  # @param String! agProviders Provider ID
  # @param AirDocIssuePayloadPayload payload 
  # @return [OrderCreateMedia]
  AirDocIssuePost(agProviders: String!, payload: AirDocIssuePayloadPayload): OrderCreateMedia

  # Post AirShopping
  # Get a list of offers for provided O&amp;D, dates and travelers.   There are three types of AirShopping request:&lt;br&gt; &lt;b&gt;(one-way)&lt;/b&gt; -&gt; For this airshopping, the array of OriginDestination´s must have only one element.&lt;/br&gt;   &lt;b&gt;(round-trip)&lt;/b&gt; -&gt; For this airshopping, the array of OriginDestination´s must have only two elements, and the arrival of the second element must be the same that the departure of the first element.&lt;/br&gt;   &lt;b&gt;(multi-city)&lt;/b&gt; -&gt; For this airshopping, the array of OriginDestination´s can have an unlimited quantity of elements.&lt;/br&gt;   This method allows async behavior by sending &lt;b&gt;AG-Connection: keep-alive&lt;/b&gt; header. If a request is received with this header, response will be real-time &lt;a href&#x3D;\&quot;https://en.wikipedia.org/wiki/JSON_Streaming\&quot;&gt;json streaming&lt;/a&gt; so API will return offers as soon as they are received from providers and parsed. Streaming responses are line delimited JSON. You can &lt;a href&#x3D;\&quot;https://api.airgateway.work/streaming-json-example.json\&quot;&gt;see an example here&lt;/a&gt;.&lt;/br&gt;   If AG-Connection is not sent, all responses from providers will be parsed together (it will be slow since it needs to wait for all provider&#39;s responses) and there will be only a response with format specified here.&lt;br&gt;   As an additional header option you can control maximum request lifetime. Use &lt;b&gt;AG-Request-Timeout&lt;/b&gt; header with integer number value in milliseconds.
  # @param String! agProviders Provider IDs list or * for all
  # @param AirShoppingPayload payload AirShoppingPayload is the type for AirShopping endpoint request body
  # @param String! agRequestTimeout Request max lifetime in seconds
  # @return [AirShoppingMedia]
  AirShoppingPost(agProviders: String!, payload: AirShoppingPayload, agRequestTimeout: String!): AirShoppingMedia

  # Post OfferPrice
  # OfferPrice performs an specific detailed info query on a precise flight.
  # @param String! agProviders Provider ID
  # @param OfferPricePayload payload 
  # @return [OfferPriceMedia]
  OfferPricePost(agProviders: String!, payload: OfferPricePayload): OfferPriceMedia

  # Post OrderCancel
  # OrderCancel returns cancelled order. 
  # @param String! agProviders Provider ID
  # @param OrderCancelPayload payload 
  # @return [OrderCancelMedia]
  OrderCancelPost(agProviders: String!, payload: OrderCancelPayload): OrderCancelMedia

  # Post OrderChange
  # The OrderChange amends existing order/PNR, and returns amended order details.
  # @param String! agProviders Provider ID
  # @param OrderChangePayload payload 
  # @return [OrderCreateMedia]
  OrderChangePost(agProviders: String!, payload: OrderChangePayload): OrderCreateMedia

  # Post OrderCreate
  # The OrderCreate makes a purchase request for the selected flight, and returns an OrderID (some providers also return a PNR), along with some flight data, such as the Origins-Destinations listing or the passenger list.
  # @param String! agProviders Provider ID
  # @param OrderCreatePayload payload 
  # @return [OrderCreateMedia]
  OrderCreatePost(agProviders: String!, payload: OrderCreatePayload): OrderCreateMedia

  # Post OrderReshop
  # OrderReshop returns offers avaialble for provided order ID and different date.
  # @param String! agProviders Provider ID
  # @param OrderReshopPayload payload 
  # @return [OrderReshopMedia]
  OrderReshopPost(agProviders: String!, payload: OrderReshopPayload): OrderReshopMedia

  # Post OrderReshopRefund
  # @param String! agProviders Provider ID
  # @param OrderReshopRefundPayload payload 
  # @return [OrderReshopRefundMedia]
  OrderReshopRefundPost(agProviders: String!, payload: OrderReshopRefundPayload): OrderReshopRefundMedia

  # Post OrderReshopReprice
  # OrderReshopReprice returns price for selected OrderReshop offer.
  # @param String! agProviders Provider ID
  # @param OrderReshopRepricePayload payload 
  # @return [OrderReshopRepriceMedia]
  OrderReshopRepricePost(agProviders: String!, payload: OrderReshopRepricePayload): OrderReshopRepriceMedia

  # Post OrderRetrieve
  # OrderRetrieve returns an order information of existing order. 
  # @param String! agProviders Provider ID
  # @param OrderRetrievePayload payload OrderRetrievePayload is the type for OrderRetrieve endpoint request body
  # @param String! agNoCacheOR If this header is set to any value, the OrderRetrieve request will be forwarded to the airline and its respective reply will also come from the airline. In case you don&#39;t set it, the OrderRetrieve reply will be generated from the information cached locally.
  # @return [OrderCreateMedia]
  OrderRetrievePost(agProviders: String!, payload: OrderRetrievePayload, agNoCacheOR: String!): OrderCreateMedia

  # Post OrderUpdate
  # The OrderUpdate amends existing passengers details on order/PNR, and returns amended order details.
  # @param String! agProviders Provider ID
  # @param OrderUpdatePayload payload 
  # @return [OrderCreateMedia]
  OrderUpdatePost(agProviders: String!, payload: OrderUpdatePayload): OrderCreateMedia

  # Post SeatAvailability
  # SeatAvailability returns a list of seat, price of these seats, its location and some more info like, for example, if a seat can be occupied by infants or only adults.
  # @param String! agProviders Provider ID
  # @param SeatAvailabilityPayload payload SeatAvailability data
  # @return [SeatAvailabilityMedia]
  SeatAvailabilityPost(agProviders: String!, payload: SeatAvailabilityPayload): SeatAvailabilityMedia

  # Post ServiceList
  # ServiceList returns a service list information for existing order. 
  # @param String! agProviders Provider ID
  # @param ServiceListPayload payload ServiceListPayload is the type for ServiceList endpoint request body
  # @return [ServiceListMedia]
  ServiceListPost(agProviders: String!, payload: ServiceListPayload): ServiceListMedia

}

type query {
}

